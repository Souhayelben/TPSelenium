/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import java.util.List;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.Before;
import org.junit.BeforeClass;

public class LibraryTest {
	
	WebDriver driver;

	@Before
	public void initbrowser() {
		System.setProperty("webdriver.chrome.driver","C:\\Windows\\System32\\chromedriver.exe");
		driver=new ChromeDriver();
		driver.manage().window().maximize();
	}
	@Test
	/*public void ChromeTest() {
		
		
		driver.get("https://fr.google.org");
		WebElement searchbar = driver.findElement(By.id("lst-ib"));
		searchbar.sendKeys("wikipedia coupe du monde 2018");
		
		List<WebElement> buttons= driver.findElements(By.className("lsb"));
		buttons.get(0).click();
		
		WebElement imagecoupe = driver.findElement(By.id("dimg_29"));
		imagecoupe.isDisplayed();
		
		Assert.assertTrue(imagecoupe.isDisplayed());
		
		try {
			Thread.sleep(9000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}*/
	
	public void WikiTest() {
		
		
		driver.get("https://en.wikipedia.org/wiki/English_Wikipedia");
		WebElement article = driver.findElement(By.id("searchInput"));
		article.sendKeys("World Cup");
		
		WebElement clic=driver.findElement(By.id("searchButton"));
		clic.click();
		
		WebElement link = driver.findElement(By.cssSelector("#mw-content-text > div > ul:nth-child(25) > li:nth-child(1) > a"));
		link.click();
		
		WebElement title = driver.findElement(By.id("firstHeading"));
		
		
		Assert.assertEquals("FIFA World Cup" ,title.getText());
		
		
		
		//buttons.get(0).click();
		
		//WebElement imagecoupe = driver.findElement(By.id("dimg_29"));
		//imagecoupe.isDisplayed();
		
		//Assert.assertTrue(imagecoupe.isDisplayed());
		
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	@After
	public void closedriver() {
		driver.quit();
	}
	
	
	/* Library Lib;
	
	@BeforeClass
	public static void initdb() 
	{
		System.out.println("DBS sd");
	}
	
	@AfterClass
	public static void closedb() {
		System.out.println("DBS finished");
	}
	
	
	@Before
	public void initlibrary() {
	 Lib=new Library();
	 System.out.println("before test");
	}
	
    @Test public void addtest() {
    	
    	System.out.println("test add");
        
        int a =Integer.MAX_VALUE;
        int b=1;
        
        int expectedresult = Integer.MIN_VALUE;;
        
		Lib.addition(a, b);
		
		Assert.assertEquals(expectedresult, Lib.addition(a, b));
        
    }
    
    @Test public void subtest() {
    	
    	System.out.println("test sub");
       
        int a =Integer.MAX_VALUE;
        int b=Integer.MIN_VALUE;
        
        int expectedresult = -1;
        
		Lib.addition(a, b);
		
		Assert.assertEquals(expectedresult, Lib.soustraction(a, b));
        
    }
 @Test public void test3() {
    	
    	System.out.println("test 3 failure" );
       
       Assert.fail();
        
    }
    @After
	public void finishlib() {
		System.out.println("test finished");
		Lib = null;
	}*/
    
}
